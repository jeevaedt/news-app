{"version":3,"sources":["components/AppBar.js","components/Card/index.js","container/HomeContainer.js","App.js"],"names":["AppBar","searchValue","setSearchValue","navigation","useState","searchEnabled","setSearchEnabled","console","log","backgroundColor","barStyle","safeAreaTop","bg","px","py","justifyContent","alignItems","space","Platform","OS","icon","size","as","MaterialIcons","name","color","marginLeft","fontSize","fontWeight","View","w","mx","variant","placeholder","isFullWidth","value","onChangeText","InputRightElement","onPress","Card","news","style","marginBottom","width","shadow","_light","_dark","ratio","roundedTop","source","uri","image","alt","_text","position","bottom","p","rounded","boxSize","right","m","textAlign","dayjs","publishedAt","format","ml","Linking","openURL","url","catch","err","error","alert","title","mt","lineHeight","description","fromNow","Ionicons","extend","localizedFormat","relativeTime","styles","StyleSheet","create","container","flex","header","display","height","heading","letterSpacing","HomeContainer","setNews","pageLoadingStatus","setPageLoadingStatus","appContext","useContext","AppContext","getNews","axios","method","params","lang","q","then","response","data","articles","useEffect","func","timer","timeout","context","this","args","arguments","clearTimeout","setTimeout","apply","debounce","Text","margin","maxWidth","ScrollView","centerContent","contentInsetAdjustmentBehavior","showsVerticalScrollIndicator","length","map","eachNews","index","key","Stack","createStackNavigator","React","App","Provider","NavigationContainer","Navigator","Screen","options","props","component"],"mappings":"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","file":"static/js/app.a664eb43.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Platform } from 'react-native';\nimport { VStack, HStack, Button, IconButton, Icon, Text, Box, StatusBar, Input, Pressable } from \"native-base\";\nimport { MaterialIcons } from '@expo/vector-icons';\n\nfunction AppBar({ searchValue, setSearchValue, navigation, ...props }) {\n    const [searchEnabled, setSearchEnabled] = useState(false);\n    console.log(searchValue)\n\n    function onClose() {\n        setSearchEnabled(false);\n        setSearchValue(\"\");\n    }\n\n    return (\n        <>\n            <StatusBar backgroundColor=\"#3700B3\" barStyle=\"light-content\" />\n            <Box safeAreaTop backgroundColor=\"#100c08\" />\n            <HStack bg='#100c08' px={1} py={3} justifyContent='space-between' alignItems='center'>\n                <HStack space={4} alignItems='center'>\n                    {Platform.OS !== \"web\" &&\n                        <IconButton icon={<Icon size=\"sm\" as={<MaterialIcons name='menu' />} color=\"white\" />} />\n                    }\n                    <Text color=\"white\" marginLeft={Platform.OS === \"web\" ? 10 : 0} fontSize={20} fontWeight='bold'>News</Text>\n                </HStack>\n                {Platform.OS === \"web\" || searchEnabled ?\n                    <View>\n                        <Input\n                            w={Platform.OS !== \"web\" ? \"60%\" : \"\"}\n                            mx={3}\n                            variant={Platform.OS !== \"web\" ? \"underlined\" : \"outline\"}\n                            placeholder=\"Search\"\n                            // _light={{\n                            //     placeholderTextColor: \"blueGray.400\",\n                            // }}\n                            // _dark={{\n                            //     placeholderTextColor: \"blueGray.50\",\n                            // }}\n                            isFullWidth={false}\n                            color=\"white\"\n                            value={searchValue || \"\"}\n                            onChangeText={setSearchValue}\n                            InputRightElement={<Icon as={<MaterialIcons name='clear' onPress={onClose} />} />}\n                        />\n                    </View>\n                    : <HStack space={2}>\n                        {/* <IconButton icon={<Icon as={<MaterialIcons name='favorite' />} size='sm' color=\"white\" />} /> */}\n                        <IconButton icon={<Icon as={<MaterialIcons name='search' onPress={() => setSearchEnabled(true)} />}\n                            color=\"white\" size='sm' />} />\n                        {/* <IconButton icon={<Icon as={<MaterialIcons name='more-vert' />} size='sm' color=\"white\" />} /> */}\n                    </HStack>}\n            </HStack>\n\n        </>\n    )\n}\nexport default AppBar;\n","import React from \"react\"\nimport {\n  Box,\n  Heading,\n  Icon,\n  AspectRatio,\n  Image,\n  Text,\n  Center,\n  HStack,\n  Stack,\n} from \"native-base\";\nimport { Platform, View, Linking } from 'react-native';\nimport { MaterialIcons, Ionicons } from \"@expo/vector-icons\"\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\nimport localizedFormat from \"dayjs/plugin/localizedFormat\";\n\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\nexport default function Card({ news }) {\n  return (\n    <View style={{ alignItems: Platform.OS === \"web\" ? \"center\" : null, marginBottom: 10 }}>\n      <Box\n        width={Platform.OS === \"web\" ? \"70%\" : \"100%\"}\n        shadow={1}\n        _light={{\n          backgroundColor: \"gray.50\",\n        }}\n        _dark={{\n          backgroundColor: \"gray.700\",\n        }}\n      >\n        <Box>\n          <AspectRatio ratio={16 / 9}>\n            <Image\n              roundedTop=\"lg\"\n              source={{\n                uri: news.image,\n              }}\n              alt=\"image\"\n            />\n          </AspectRatio>\n          <Center\n            bg=\"red.500\"\n            _text={{\n              color: \"white\",\n              fontWeight: \"700\",\n              fontSize: \"xs\",\n            }}\n            position=\"absolute\"\n            bottom={0}\n            px={2}\n            py={1}\n          >\n            PHOTOS\n          </Center>\n          <Center\n            p={1}\n            rounded=\"full\"\n            bg=\"red.500\"\n            boxSize={10}\n            position=\"absolute\"\n            right={0}\n            m={2}\n            _text={{\n              color: \"white\",\n              textAlign: \"center\",\n              fontWeight: \"700\",\n              fontSize: \"xs\",\n            }}\n          >\n            {dayjs(news.publishedAt).format('D MMM')}\n          </Center>\n        </Box>\n        <Stack p={4} space={2}>\n          <Stack space={2}>\n            <Heading size=\"md\" ml={-1} onPress={() => {\n              Linking.openURL(news.url)\n                .catch(err => {\n                  console.error(\"Failed opening page because: \", err)\n                  alert('Failed to open page')\n                })\n            }}>\n              {news.title}\n            </Heading>\n            <Heading\n              size=\"xs\"\n              _light={{\n                color: \"red.500\",\n              }}\n              _dark={{\n                color: \"red.300\",\n              }}\n              fontWeight=\"500\"\n              ml={-0.5}\n              mt={-1}\n            >\n              {news.source.name}\n            </Heading>\n          </Stack>\n          <Text lineHeight={6} fontWeight={400} >\n            {news.description}\n          </Text>\n          <HStack alignItems=\"center\" space={4} justifyContent=\"space-between\">\n            <HStack alignItems=\"center\">\n              <Icon\n                as={<MaterialIcons name=\"access-time\" />}\n                color=\"gray.500\"\n                size=\"sm\"\n              />\n              <Text ml={1} color=\"gray.500\" fontWeight=\"500\">\n                {dayjs(news.publishedAt).fromNow()}\n              </Text>\n            </HStack>\n            <HStack alignItems=\"center\">\n              <Icon\n                as={<Ionicons name=\"ios-chatbubbles\" />}\n                color=\"gray.500\"\n                size=\"sm\"\n              />\n\n              <Text ml={1} color=\"gray.500\" fontWeight=\"500\">\n                39 comments\n              </Text>\n            </HStack>\n          </HStack>\n        </Stack>\n      </Box>\n    </View>\n  )\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport { StyleSheet, View, ScrollView, Text } from 'react-native';\nimport { NativeBaseProvider, Container } from 'native-base';\nimport axios from 'axios';\nimport AppBar from '../components/AppBar';\nimport Card from '../components/Card';\nimport { AppContext } from '../App';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#01152B',\n    height: 60\n  },\n  heading: {\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    letterSpacing: 1\n  }\n});\n\n\nexport default function HomeContainer() {\n  const [news, setNews] = useState([]);\n  const [pageLoadingStatus, setPageLoadingStatus] = useState(true);\n  const appContext = useContext(AppContext);\n  console.log(appContext)\n  useEffect(() => {\n    getNews();\n  }, []);\n\n  useEffect(() => {\n    debounce(getNews, 300)();\n  }, [appContext.searchValue]);\n\n  function debounce(func, timeout = 500) {\n    let timer;\n    return function () {\n      const context = this, args = arguments;\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        func.apply(context, args);\n      }, timeout)\n    }\n  }\n\n  function getNews() {\n    axios({\n      method: 'GET',\n      url: 'https://gnews.io/api/v4/top-headlines?&token=9ead871aef939717eab5348120cdac3c',\n      params: { lang: \"ta\", q: appContext.searchValue || \"\" }\n    }).then((response) => {\n      console.log(response.data.articles);\n      setPageLoadingStatus(false)\n      setNews(response.data.articles)\n    })\n  }\n\n\n  return (\n    <NativeBaseProvider>\n      {!pageLoadingStatus ?\n        <Container style={{ margin: 10, alignItems: \"center\", maxWidth: \"100%\" }}>\n          <ScrollView centerContent={true} contentInsetAdjustmentBehavior=\"automatic\" showsVerticalScrollIndicator={false}>\n            {news.length ?\n              news.map((eachNews, index) => <Card key={index} news={eachNews} />)\n              : <View style={styles.container}>\n                <Text>No such data...</Text>\n              </View>\n            }\n          </ScrollView>\n        </Container> :\n        <View style={styles.container}>\n          <Text>Loading...</Text>\n        </View>}\n    </NativeBaseProvider>\n  );\n}\n\n","import * as React from 'react';\nimport { NativeBaseProvider } from 'native-base';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport HomeContainer from './container/HomeContainer';\nimport AppBar from './components/AppBar'\n\nconst Stack = createStackNavigator();\nexport const AppContext = React.createContext({});\n\nfunction App() {\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  return (\n    <AppContext.Provider value={{ searchValue }}>\n      <NavigationContainer>\n        <NativeBaseProvider>\n          <Stack.Navigator >\n            <Stack.Screen name=\"Home\" options={{\n              header: (props) => <AppBar searchValue={searchValue} setSearchValue={setSearchValue} {...props} />\n            }}\n              component={HomeContainer}\n            />\n          </Stack.Navigator>\n        </NativeBaseProvider>\n      </NavigationContainer>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}