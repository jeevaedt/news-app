{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\n\nvar _this = this,\n    _jsxFileName = \"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/primitives/Spinner/index.tsx\";\n\nvar StyledSpinner = (0, _native.default)(_reactNative.ActivityIndicator)(_styledSystem.color, _styledSystem.space, _styledSystem.position);\n\nvar Spinner = function Spinner(props, ref) {\n  var resolvedProps = (0, _useThemeProps.usePropsResolution)('Spinner', props);\n  return _react.default.createElement(StyledSpinner, (0, _extends2.default)({\n    accessible: true,\n    accessibilityLabel: \"loading\"\n  }, resolvedProps, {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar _default = (0, _react.memo)((0, _react.forwardRef)(Spinner));\n\nexports.default = _default;","map":{"version":3,"sources":["index.tsx"],"names":["StyledSpinner","ActivityIndicator","color","space","position","Spinner","resolvedProps"],"mappings":";;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,gCAAA;;;;;AAGA,IAAMA,aAAa,GAAG,CAAA,GAAA,OAAA,CAAA,OAAA,EAAOC,YAAAA,CAAP,iBAAA,EACpBC,aAAAA,CADoB,KAAA,EAEpBC,aAAAA,CAFoB,KAAA,EAGpBC,aAAAA,CAHF,QAAsB,CAAtB;;AAKA,IAAMC,OAAO,GAAPA,SAAAA,OAAAA,CAAU,KAAVA,EAAU,GAAVA,EAA8C;AAClD,MAAMC,aAAa,GAAG,CAAA,GAAA,cAAA,CAAA,kBAAA,EAAA,SAAA,EAAtB,KAAsB,CAAtB;AACA,SACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,aAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA;AACE,IAAA,UAAU,EADZ,IAAA;AAEE,IAAA,kBAAkB,EAFpB;AAAA,GAAA,EAAA,aAAA,EAAA;AAIE,IAAA,GAAG,EAJL,GAAA;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EADF;AACE;AAAA,GAAA,CAAA,CADF;AAFF,CAAA;;eAYe,CAAA,GAAA,MAAA,CAAA,IAAA,EAAK,CAAA,GAAA,MAAA,CAAA,UAAA,EAAL,OAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ActivityIndicator } from 'react-native';\nimport styled from 'styled-components/native';\nimport { color, space, position } from 'styled-system';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { ISpinnerProps } from './types';\n\nconst StyledSpinner = styled(ActivityIndicator)<ISpinnerProps>(\n  color,\n  space,\n  position\n);\nconst Spinner = (props: ISpinnerProps, ref: any) => {\n  const resolvedProps = usePropsResolution('Spinner', props);\n  return (\n    <StyledSpinner\n      accessible\n      accessibilityLabel=\"loading\"\n      {...resolvedProps}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(Spinner));\nexport type { ISpinnerProps };\n"]},"metadata":{},"sourceType":"script"}