{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _extends2=_interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _react=_interopRequireWildcard(require(\"react\"));var _ExitAnimationContext=require(\"../../primitives/Overlay/ExitAnimationContext\");var _Transition=require(\"./Transition\");var _this=this,_jsxFileName=\"/Users/adityajamuar/Sites/projects/nativebase/NativeBase/src/components/composites/Transitions/PresenceTransition.tsx\";var PresenceTransition=function PresenceTransition(_ref,ref){var _ref$visible=_ref.visible,visible=_ref$visible===void 0?false:_ref$visible,_onTransitionComplete=_ref.onTransitionComplete,rest=(0,_objectWithoutProperties2.default)(_ref,[\"visible\",\"onTransitionComplete\"]);var _React$useState=_react.default.useState(!visible),_React$useState2=(0,_slicedToArray2.default)(_React$useState,2),animationExited=_React$useState2[0],setAnimationExited=_React$useState2[1];var _React$useContext=_react.default.useContext(_ExitAnimationContext.ExitAnimationContext),setExited=_React$useContext.setExited;if(!visible&&animationExited){return null;}return _react.default.createElement(_Transition.Transition,(0,_extends2.default)({visible:visible,onTransitionComplete:function onTransitionComplete(state){if(state==='exited'){setAnimationExited(true);setExited(true);}else{setAnimationExited(false);setExited(false);}_onTransitionComplete&&_onTransitionComplete(state);}},rest,{ref:ref,__self:_this,__source:{fileName:_jsxFileName,lineNumber:19,columnNumber:5}}));};var _default=(0,_react.memo)((0,_react.forwardRef)(PresenceTransition));exports.default=_default;","map":{"version":3,"sources":["PresenceTransition.tsx"],"names":["PresenceTransition","visible","onTransitionComplete","rest","animationExited","setAnimationExited","React","setExited","ExitAnimationContext","state"],"mappings":"ohBAAA,GAAA,CAAA,MAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CACA,GAAA,CAAA,qBAAA,CAAA,OAAA,iDAAA,CACA,GAAA,CAAA,WAAA,CAAA,OAAA,gBAAA,C,oJAGA,GAAMA,CAAAA,kBAAkB,CAAlBA,QAAAA,CAAAA,kBAAAA,CAAqB,IAArBA,CAAqB,GAArBA,CAGD,CAAA,GAAA,CAAA,YAAA,CAAA,IAAA,CAFDC,OAEC,CAFDA,OAEC,CAAA,YAAA,GAAA,IAAA,EAAA,CAFS,KAET,CAAA,YAAA,CAFgBC,qBAEhB,CAAA,IAAA,CAFgBA,oBAEhB,CAFyCC,IAEzC,CAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,EAAA,IAAA,CAAA,CAAA,SAAA,CAAA,sBAAA,CAAA,CAAA,CAAA,GAAA,CAAA,eAAA,CAC2CG,MAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CAAe,CAD1D,OAC2CA,CAD3C,CAAA,gBAAA,CAAA,CAAA,EAAA,eAAA,CAAA,OAAA,EAAA,eAAA,CAAA,CAAA,CAAA,CACIF,eADJ,CAAA,gBAAA,CAAA,CAAA,CAAA,CACqBC,kBADrB,CAAA,gBAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,iBAAA,CAGmBC,MAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAiBE,qBAAAA,CAHpC,oBAGmBF,CAHnB,CAGKC,SAHL,CAAA,iBAAA,CAAA,SAAA,CAKH,GAAI,CAAA,OAAA,EAAJ,eAAA,CAAiC,CAC/B,MAAA,KAAA,CAGF,OACE,CAAA,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,WAAA,CAAD,UAAA,CAAA,CAAA,EAAA,SAAA,CAAA,OAAA,EAAA,CACE,OAAO,CADT,OAAA,CAEE,oBAAoB,CAAE,QAAA,CAAA,oBAAA,CAAA,KAAA,CAAW,CAC/B,GAAIE,KAAK,GAAT,QAAA,CAAwB,CACtBJ,kBAAkB,CAAlBA,IAAkB,CAAlBA,CACAE,SAAS,CAATA,IAAS,CAATA,CAFF,CAAA,IAGO,CACLF,kBAAkB,CAAlBA,KAAkB,CAAlBA,CACAE,SAAS,CAATA,KAAS,CAATA,CAEFL,CAAAA,qBAAoB,EAAIA,qBAAoB,CAA5CA,KAA4C,CAA5CA,CAVJ,CAAA,CAAA,CAAA,IAAA,CAAA,CAaE,GAAG,CAbL,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,EAAA,CAAA,YAAA,CADF,CACE,CAAA,CAAA,CAAA,CADF,CAZF,CAAA,C,aA+Be,CAAA,EAAA,MAAA,CAAA,IAAA,EAAK,CAAA,EAAA,MAAA,CAAA,UAAA,EAAL,kBAAK,CAAL,C","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { ExitAnimationContext } from '../../primitives/Overlay/ExitAnimationContext';\nimport { Transition } from './Transition';\nimport type { IPresenceTransitionProps } from './types';\n\nconst PresenceTransition = (\n  { visible = false, onTransitionComplete, ...rest }: IPresenceTransitionProps,\n  ref: any\n) => {\n  const [animationExited, setAnimationExited] = React.useState(!visible);\n\n  const { setExited } = React.useContext(ExitAnimationContext);\n\n  if (!visible && animationExited) {\n    return null;\n  }\n\n  return (\n    <Transition\n      visible={visible}\n      onTransitionComplete={(state) => {\n        if (state === 'exited') {\n          setAnimationExited(true);\n          setExited(true);\n        } else {\n          setAnimationExited(false);\n          setExited(false);\n        }\n        onTransitionComplete && onTransitionComplete(state);\n      }}\n      {...rest}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(PresenceTransition));\n"]},"metadata":{},"sourceType":"script"}